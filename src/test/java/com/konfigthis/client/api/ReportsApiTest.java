/*
 * Timmi Timesheet API
 * Welcome on the documentation for the Timmi Timesheet API. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: developers@lucca.fr
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import java.time.LocalDate;
import com.konfigthis.client.model.Report;
import com.konfigthis.client.model.ReportColumnsInner;
import com.konfigthis.client.model.ReportFiltersInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReportsApi
 */
@Disabled
public class ReportsApiTest {

    private static ReportsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ReportsApi(apiClient);
    }

    /**
     * Create a new Report
     *
     * &lt;!-- theme: info --&gt; &gt; This endpoint does not adhere to the \&quot;v3 API endpoints\&quot; principles. The \&quot;fields\&quot; query parameter is not supported, but all fields are systematically returned.  A report can only be created based on an existing report-template. So you first need to retrieve the report-template unique identifier &#x60;templateId&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createBasedOnTemplateTest() throws ApiException {
        String templateId = null;
        Integer id = null;
        String status = null;
        String name = null;
        LocalDate startsOn = null;
        LocalDate endsOn = null;
        List<ReportFiltersInner> filters = null;
        List<ReportColumnsInner> columns = null;
        Report response = api.createBasedOnTemplate(templateId)
                .id(id)
                .status(status)
                .name(name)
                .startsOn(startsOn)
                .endsOn(endsOn)
                .filters(filters)
                .columns(columns)
                .execute();
        // TODO: test validations
    }

    /**
     * Download Report as CSV
     *
     * &lt;!-- theme: info --&gt; &gt; This endpoint does not adhere to the \&quot;v3 API endpoints\&quot; principles.  Download a report content as an CSV file &#x60;.csv&#x60;.  Column delimiter and numbers formating depends on the authentified user&#39;s culture.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void downloadCsvReportTest() throws ApiException {
        Integer reportId = null;
        String response = api.downloadCsvReport(reportId)
                .execute();
        // TODO: test validations
    }

    /**
     * Download Report as Excel
     *
     * &lt;!-- theme: info --&gt; &gt; This endpoint does not adhere to the \&quot;v3 API endpoints\&quot; principles.  Download a report content as an Excel file &#x60;.xls&#x60;.  Column delimiter and numbers formating depends on the authentified user&#39;s culture.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void downloadExcelReportTest() throws ApiException {
        Integer reportId = null;
        String response = api.downloadExcelReport(reportId)
                .execute();
        // TODO: test validations
    }

}
