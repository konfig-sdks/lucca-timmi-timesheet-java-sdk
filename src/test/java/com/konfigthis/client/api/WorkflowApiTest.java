/*
 * Timmi Timesheet API
 * Welcome on the documentation for the Timmi Timesheet API. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: developers@lucca.fr
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.WorkflowApproveTimesheetsByIdRequest;
import com.konfigthis.client.model.WorkflowApproveTimesheetsByIdRequestTimesheetsInner;
import com.konfigthis.client.model.WorkflowCancelTimesheetByIdRequest;
import com.konfigthis.client.model.WorkflowCancelTimesheetByIdRequestTimesheetsInner;
import com.konfigthis.client.model.WorkflowDenyTimesheetByIdRequest;
import com.konfigthis.client.model.WorkflowDenyTimesheetByIdRequestTimesheetsInner;
import com.konfigthis.client.model.WorkflowInvalidateTimesheetByIdRequest;
import com.konfigthis.client.model.WorkflowSendReminderEmailRequest;
import com.konfigthis.client.model.WorkflowSendReminderEmailRequestTimesheetsInner;
import com.konfigthis.client.model.WorkflowSubmitTimesheetRequest;
import com.konfigthis.client.model.WorkflowSubmitTimesheetRequestTimesheetsInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WorkflowApi
 */
@Disabled
public class WorkflowApiTest {

    private static WorkflowApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new WorkflowApi(apiClient);
    }

    /**
     * Approve Timesheets by id
     *
     * &lt;!-- theme: warning --&gt;  &gt;#### Warning &gt; This endpoint will soon be deprecated, please use [Timmi Timesheet v4 API](../reference/Timmi-Timesheet.yaml/paths/~1timmi-timesheet~1api~1timesheets~1{id}~1approve/post)  Multiple approvals can be required, depending on the configuration.  Once all approvals needed are satisfied, the timesheet status is set to &#x60;2: Approved&#x60;.  Comprised TimeEntries can only be modified by rejecting the timesheet through the \&quot;invalidate\&quot; operation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void approveTimesheetsByIdTest() throws ApiException {
        List<WorkflowApproveTimesheetsByIdRequestTimesheetsInner> timesheets = null;
        WorkflowSendReminderEmailResponse response = api.approveTimesheetsById()
                .timesheets(timesheets)
                .execute();
        // TODO: test validations
    }

    /**
     * Cancel Timesheets by id
     *
     * &lt;!-- theme: warning --&gt;  &gt;#### Warning &gt; This endpoint will soon be deprecated, please use [Timmi Timesheet v4 API](../reference/Timmi-Timesheet.yaml/paths/~1timmi-timesheet~1api~1timesheets~1{id}~1cancel/post)  Cancel a timesheet&#39;s submission. Can only be achieved by the original submitter as long as the timesheet&#39;s not approved.  Sets the timesheet status to &#x60;3&#x60; (rejected).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cancelTimesheetByIdTest() throws ApiException {
        List<WorkflowCancelTimesheetByIdRequestTimesheetsInner> timesheets = null;
        WorkflowSendReminderEmailResponse response = api.cancelTimesheetById()
                .timesheets(timesheets)
                .execute();
        // TODO: test validations
    }

    /**
     * Deny Timesheets by id
     *
     * &lt;!-- theme: warning --&gt;  &gt;#### Warning &gt; This endpoint will soon be deprecated, please use [Timmi Timesheet v4 API](../reference/Timmi-Timesheet.yaml/paths/~1timmi-timesheet~1api~1timesheets~1{id}~1deny/post)  Denies a submitted timesheet pending approval. Sets its status to &#x60;3&#x60; (rejected) and a new timesheet may be submitted for this User and [StartsOn - EndsOn[.  Comment is mandatory.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void denyTimesheetByIdTest() throws ApiException {
        List<WorkflowDenyTimesheetByIdRequestTimesheetsInner> timesheets = null;
        WorkflowSendReminderEmailResponse response = api.denyTimesheetById()
                .timesheets(timesheets)
                .execute();
        // TODO: test validations
    }

    /**
     * Invalidate Timesheets by id
     *
     * &lt;!-- theme: warning --&gt;  &gt;#### Warning &gt; This endpoint will soon be deprecated, please use [Timmi Timesheet v4 API](../reference/Timmi-Timesheet.yaml/paths/~1timmi-timesheet~1api~1timesheets~1{id}~1invalidate/post)  Rejects an approved timesheet. Sets its status to &#x60;3&#x60; (rejected). A new timesheet may then be submitted for this User and [StartsOn - EndsOn[.  Comment is mandatory.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void invalidateTimesheetByIdTest() throws ApiException {
        List<WorkflowCancelTimesheetByIdRequestTimesheetsInner> timesheets = null;
        WorkflowSendReminderEmailResponse response = api.invalidateTimesheetById()
                .timesheets(timesheets)
                .execute();
        // TODO: test validations
    }

    /**
     * Remind Timesheets
     *
     * Remind user of a due timesheet. Sends him/her an email.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sendReminderEmailTest() throws ApiException {
        List<WorkflowSendReminderEmailRequestTimesheetsInner> timesheets = null;
        WorkflowSendReminderEmailResponse response = api.sendReminderEmail()
                .timesheets(timesheets)
                .execute();
        // TODO: test validations
    }

    /**
     * Submit Timesheets
     *
     * &lt;!-- theme: warning --&gt; &gt; #### Warning &gt; This endpoint will soon be deprecated, please use [Timmi Timesheet v4 API](../reference/Timmi-Timesheet.yaml/paths/~1timmi-timesheet~1api~1timesheets~1submit/post)  Timesheet is created and its status is set to &#x60;1&#x60; (pending approval). In some cases, timesheet may then be automatically approved (&#x60;status: 2&#x60;), depending on the application settings.  Once submitted, all comprised TimeEntries for user can no longer be modified. In order to be able to modify them, the timesheet must first be rejected through &#x60;cancel&#x60;, &#x60;deny&#x60; or &#x60;invalidate&#x60; operations (depends on the current timesheet status).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void submitTimesheetTest() throws ApiException {
        List<WorkflowSubmitTimesheetRequestTimesheetsInner> timesheets = null;
        WorkflowSendReminderEmailResponse response = api.submitTimesheet()
                .timesheets(timesheets)
                .execute();
        // TODO: test validations
    }

}
